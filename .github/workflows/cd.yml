name: CD Pipeline

on:
  workflow_dispatch:  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Get latest IMAGE_TAG
        run: |
          IMAGE_TAG=$(cat .github/latest-image-tag.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Using image tag: $IMAGE_TAG"

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: roohmeiy
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Run commands on EC2 via SSH
        env:
          IMAGE_NAME: "my-strapi-app"
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          API_TOKEN_SALT: ${{ secrets.API_TOKEN_SALT }}
          ADMIN_JWT_SECRET: ${{ secrets.ADMIN_JWT_SECRET }}
          TRANSFER_TOKEN_SALT: ${{ secrets.TRANSFER_TOKEN_SALT }}
          APP_KEYS: ${{ secrets.APP_KEYS }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_INSTANCE_PUBLIC_IP }} << 'ENDSSH'
            # Define container name
            CONTAINER_NAME="my-strapi-app"
            IMAGE_NAME="${{ env.IMAGE_NAME }}"
            IMAGE_TAG="${{ env.IMAGE_TAG }}"

            # Stop and remove the existing container if it exists
            if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
              echo "Stopping and removing existing container..."
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
            fi
            
            # Pull and run the Docker container
            docker pull roohmeiy/$IMAGE_NAME:$IMAGE_TAG
            
            docker run -d --name $CONTAINER_NAME \
              -p 1337:1337 \
              -e API_TOKEN_SALT='${{ env.API_TOKEN_SALT }}' \
              -e ADMIN_JWT_SECRET='${{ env.ADMIN_JWT_SECRET }}' \
              -e TRANSFER_TOKEN_SALT='${{ env.TRANSFER_TOKEN_SALT }}' \
              -e APP_KEYS='${{ env.APP_KEYS }}' \
              roohmeiy/$IMAGE_NAME:$IMAGE_TAG
          ENDSSH