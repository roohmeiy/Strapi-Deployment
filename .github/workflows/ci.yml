name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Optional tag for Docker image"
        required: false
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Get latest image tag if not specified
      id: get_image_tag
      if: ${{ github.event.inputs.image_tag == '' }}
      run: |
        IMAGE_TAG=$(gh run list --workflow=ci.yml --branch=main --status=success --limit=1 --json jobs --jq '.[0].jobs[0].outputs.image_tag')
        echo "image_tag=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "Using image tag: ${IMAGE_TAG}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0
    
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
    
    - name: Terraform Plan
      run: |
        terraform plan \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="ecr_repository=${{ secrets.ECR_REPOSITORY_NAME }}" \
          -var="image_tag=${{ github.event.inputs.image_tag || env.image_tag }}" \
          -out=tfplan
      working-directory: ./terraform
    
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform