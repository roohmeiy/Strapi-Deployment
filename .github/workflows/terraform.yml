name: CD Pipeline

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Run commands on EC2 via SSH
        run: |
          IMAGE_URL="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/strapi:${{ github.event.inputs.image_tag }}"
          
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_INSTANCE_PUBLIC_IP }} << 'ENDSSH'
          set -e
          
          # Navigate to the Strapi application directory
          mkdir -p /home/ubuntu/strapi
          cd /home/ubuntu/strapi

          # Login to ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          
          # Check if the Strapi container already exists and remove it
          if [ "$(docker ps -aq -f name=strapi)" ]; then
            echo "Removing existing Strapi container..."
            docker rm -f strapi || true
          fi
          
          # Run the Strapi container in detached mode
          echo "Running Strapi container..."
          docker run -d \
            --name strapi \
            -p 1337:1337 \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/strapi:${{ github.event.inputs.image_tag }}
            
          # Verify the container is running
          docker ps | grep strapi
          ENDSSH