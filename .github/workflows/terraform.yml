name: CD Pipeline

on:
  workflow_dispatch:  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: roohmeiy
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Pull and deploy Docker image
        env:
          EC2_HOST: ${{ secrets.EC2_INSTANCE_PUBLIC_IP }}  
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          IMAGE_NAME="my-strapi-app"                       
          IMAGE_TAG="${{ github.event.inputs.image_tag }}"  

          # SSH into EC2 and manage Docker containers
          ssh -i <(echo "$EC2_PRIVATE_KEY") -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << EOF
            # Export variables into the SSH session
            export IMAGE_NAME="$IMAGE_NAME"
            export IMAGE_TAG="$IMAGE_TAG"
            CONTAINER_NAME="my-strapi-app"

            # Stop and remove the existing container if it exists
            if [ "\$(docker ps -q -f name=\$CONTAINER_NAME)" ]; then
              echo "Stopping and removing existing container..."
              docker stop \$CONTAINER_NAME
              docker rm \$CONTAINER_NAME
            fi
            
            docker pull roohmeiy/\$IMAGE_NAME:\$IMAGE_TAG
            docker run -d --name \$CONTAINER_NAME -p 1337:1337 roohmeiy/\$IMAGE_NAME:\$IMAGE_TAG      
          EOF